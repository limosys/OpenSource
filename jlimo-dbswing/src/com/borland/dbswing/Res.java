// DO NOT EDIT THIS FILE
// Copyright (c) 2005, Borland Software Corporation. All Rights Reserved.
// version 3

package com.borland.dbswing;

public class Res extends java.util.ResourceBundle {

  protected Object handleGetObject(String key) { return null; }
  public java.util.Enumeration getKeys()       { return null; }

  private static final Res bundle = getBundle();

  private static Res getBundle() {
    try {
      return (Res)getBundle("com.borland.dbswing.Res");
    } catch (Exception e) {
      return new Res();
    }
  }

//------------------------------------------//
  protected    String _res_First = "Move to first row";
  public static final String  _First = bundle._res_First;
  protected    String _res_RowFiltUnRegError = "{0} unable to unregister DBEventMonitor as RowFilterListener on DataSet {1} and/or restore original RowFilterListener";
  public static final String  _RowFiltUnRegError = bundle._res_RowFiltUnRegError;
  protected    String _res_Copy = "Copy";
  public static final String  _Copy = bundle._res_Copy;
  protected    String _res_InvalidImageFile = "The selected file did not contain a supported image format.";
  public static final String  _InvalidImageFile = bundle._res_InvalidImageFile;
  protected    String _res_UnknownReason = "Unknown AccessEvent id";
  public static final String  _UnknownReason = bundle._res_UnknownReason;
  protected    String _res_NavMoveFailed = "Unable to navigate to different row";
  public static final String  _NavMoveFailed = bundle._res_NavMoveFailed;
  protected    String _res_StackBtn = "Stack Trace";
  public static final String  _StackBtn = bundle._res_StackBtn;
  protected    String _res_SaveTextorRTForSerTitle = "Save as text file, RTF file, or serialized Java object";
  public static final String  _SaveTextorRTForSerTitle = bundle._res_SaveTextorRTForSerTitle;
  protected    String _res_MultipleRows = "{0}, multiple rows";
  public static final String  _MultipleRows = bundle._res_MultipleRows;
  protected    String _res_Undo = "Undo";
  public static final String  _Undo = bundle._res_Undo;
  protected    String _res_Delete = "Delete current row";
  public static final String  _Delete = bundle._res_Delete;
  protected    String _res_OpenMenu = "Open";
  public static final String  _OpenMenu = bundle._res_OpenMenu;
  protected    String _res_ColRegError = "{0} unable to register DBEventMonitor as column listener on Column {1} of DataSet {2}";
  public static final String  _ColRegError = bundle._res_ColRegError;
  protected    String _res_Save = "Save changes";
  public static final String  _Save = bundle._res_Save;
  protected    String _res_NullColPos = "CustomColumnDescriptor: columnPositions can not be null";
  public static final String  _NullColPos = bundle._res_NullColPos;
  protected    String _res_Cancel = "Cancel changes to current row";
  public static final String  _Cancel = bundle._res_Cancel;
  protected    String _res_ColChangeError = "{0} unable to restore replaced ColumnChangeListener on Column {1} of DataSet {2}";
  public static final String  _ColChangeError = bundle._res_ColChangeError;
  protected    String _res_SaveMenuDialog = "Save...";
  public static final String  _SaveMenuDialog = bundle._res_SaveMenuDialog;
  protected    String _res_Insert = "Insert new row";
  public static final String  _Insert = bundle._res_Insert;
  protected    String _res_Last = "Move to last row";
  public static final String  _Last = bundle._res_Last;
  protected    String _res_ResolverInsertError = "{0} {1}, {2} exception thrown: {3}";
  public static final String  _ResolverInsertError = bundle._res_ResolverInsertError;
  protected    String _res_Ditto = "Copy previous row";
  public static final String  _Ditto = bundle._res_Ditto;
  protected    String _res_SerFileFilter = "Serialized Java objects (*.ser)";
  public static final String  _SerFileFilter = bundle._res_SerFileFilter;
  protected    String _res_Redo = "Redo";
  public static final String  _Redo = bundle._res_Redo;
  protected    String _res_NextBtn = "Next";
  public static final String  _NextBtn = bundle._res_NextBtn;
  protected    String _res_OverwriteFile = "File already exists.  Are you sure you would like to overwrite it?";
  public static final String  _OverwriteFile = bundle._res_OverwriteFile;
  protected    String _res_ColPaintRegError = "{0} unable to register DBEventMonitor as ColumnPaintListener on Column {1} of DataSet {2}";
  public static final String  _ColPaintRegError = bundle._res_ColPaintRegError;
  protected    String _res_URLDialogTitle = "Please enter a URL";
  public static final String  _URLDialogTitle = bundle._res_URLDialogTitle;
  protected    String _res_BackgroundColor = "Background color...";
  public static final String  _BackgroundColor = bundle._res_BackgroundColor;
  protected    String _res_Error = "Error";
  public static final String  _Error = bundle._res_Error;
  protected    String _res_CancelBtn = "Cancel";
  public static final String  _CancelBtn = bundle._res_CancelBtn;
  protected    String _res_ColsNotEqual = "CustomColumnDescriptor: columnPositions and tableColumns arrays must be the same size";
  public static final String  _ColsNotEqual = bundle._res_ColsNotEqual;
  protected    String _res_AccessEventReason = "{0}, reason: ";
  public static final String  _AccessEventReason = bundle._res_AccessEventReason;
  protected    String _res_FileNotExist = "File does not exist or is invalid.";
  public static final String  _FileNotExist = bundle._res_FileNotExist;
  protected    String _res_CalcFieldRegError = "{0} unable to register DBEventMonitor as CalcFieldsListener on DataSet {1} and/or replace original CalcFieldsListener";
  public static final String  _CalcFieldRegError = bundle._res_CalcFieldRegError;
  protected    String _res_FontSizeLabelMnemonic = "s";
  public static final String  _FontSizeLabelMnemonic = bundle._res_FontSizeLabelMnemonic;
  protected    String _res_FontSample = "Sample";
  public static final String  _FontSample = bundle._res_FontSample;
  protected    String _res_OpenFileDialog = "File...";
  public static final String  _OpenFileDialog = bundle._res_OpenFileDialog;
  protected    String _res_PrevTip = "View previous chained exception";
  public static final String  _PrevTip = bundle._res_PrevTip;
  protected    String _res_ColChangeRegError = "{0} unable to register DBEventMonitor as ColumnChangeListener on Column {1} of DataSet {2}";
  public static final String  _ColChangeRegError = bundle._res_ColChangeRegError;
  protected    String _res_RecordId = "Record {0} of {1}";
  public static final String  _RecordId = bundle._res_RecordId;
  protected    String _res_FontSizeLabel = "Font size:";
  public static final String  _FontSizeLabel = bundle._res_FontSizeLabel;
  protected    String _res_SelectAll = "Select All";
  public static final String  _SelectAll = bundle._res_SelectAll;
  protected    String _res_SaveTextorSerTitle = "Save as text file or serialized Java object";
  public static final String  _SaveTextorSerTitle = bundle._res_SaveTextorSerTitle;
  protected    String _res_UnsupImg = "<unsupported image format>";
  public static final String  _UnsupImg = bundle._res_UnsupImg;
  protected    String _res_AccessChange = "{0}, old column: {1}, new column: {2}";
  public static final String  _AccessChange = bundle._res_AccessChange;
  protected    String _res_BoldFont = "BOLD";
  public static final String  _BoldFont = bundle._res_BoldFont;
  protected    String _res_Unsorted = "<unsorted>";
  public static final String  _Unsorted = bundle._res_Unsorted;
  protected    String _res_OpenTextTitle = "Open text file";
  public static final String  _OpenTextTitle = bundle._res_OpenTextTitle;
  protected    String _res_InvalidIconColumnType = "Column type for displaying icons must be of type INPUTSTREAM or OBJECT";
  public static final String  _InvalidIconColumnType = bundle._res_InvalidIconColumnType;
  protected    String _res_PassPrmptNoDatabase = "Database property must be set before showing dialog";
  public static final String  _PassPrmptNoDatabase = bundle._res_PassPrmptNoDatabase;
  protected    String _res_StatusUnknown = "StatusEvent unknown event ID";
  public static final String  _StatusUnknown = bundle._res_StatusUnknown;
  protected    String _res_InvalidSelectedItem = "Unable to navigate to selected item because item could not be converted to proper DataSet column type";
  public static final String  _InvalidSelectedItem = bundle._res_InvalidSelectedItem;
  protected    String _res_YesButtonMnemonic = "y";
  public static final String  _YesButtonMnemonic = bundle._res_YesButtonMnemonic;
  protected    String _res_FontNameLabel = "Font name:";
  public static final String  _FontNameLabel = bundle._res_FontNameLabel;
  protected    String _res_CalcFieldsUnRegError = "{0} unable to unregister DBEventMonitor as CalcFieldsListener on DataSet {1} and/or restore original CalcFieldsListener";
  public static final String  _CalcFieldsUnRegError = bundle._res_CalcFieldsUnRegError;
  protected    String _res_OpenTextorSerTitle = "Open text file or serialized Java object";
  public static final String  _OpenTextorSerTitle = bundle._res_OpenTextorSerTitle;
  protected    String _res_HTMLFileFilter = "HTML files (*.html)";
  public static final String  _HTMLFileFilter = bundle._res_HTMLFileFilter;
  protected    String _res_Paste = "Paste";
  public static final String  _Paste = bundle._res_Paste;
  protected    String _res_NoButton = "No";
  public static final String  _NoButton = bundle._res_NoButton;
  protected    String _res_ForegroundColor = "Foreground color...";
  public static final String  _ForegroundColor = bundle._res_ForegroundColor;
  protected    String _res_RowFiltRegError = "{0} unable to register DBEventMonitor as RowFilterListener on DataSet {1} and/or replace original RowFilterListener";
  public static final String  _RowFiltRegError = bundle._res_RowFiltRegError;
  protected    String _res_YesButton = "Yes";
  public static final String  _YesButton = bundle._res_YesButton;
  protected    String _res_SaveTextTitle = "Save as text file";
  public static final String  _SaveTextTitle = bundle._res_SaveTextTitle;
  protected    String _res_UnregisterError = "{0} unable to unregister DBEventMonitor as column listener on Column {1} of DataSet {2}";
  public static final String  _UnregisterError = bundle._res_UnregisterError;
  protected    String _res_ItalicFont = "ITALIC";
  public static final String  _ItalicFont = bundle._res_ItalicFont;
  protected    String _res_ColPaintError = "{0} unable to restore replaced ColumnPaintListener on Column {1} of DataSet {2}";
  public static final String  _ColPaintError = bundle._res_ColPaintError;
  protected    String _res_EditRegError = "{0} unable to register DBEventMonitor as EditListener on DataSet {1} because an EditListener has already been registered.";
  public static final String  _EditRegError = bundle._res_EditRegError;
  protected    String _res_OpenURL = "Open URL...";
  public static final String  _OpenURL = bundle._res_OpenURL;
  protected    String _res_FontNameLabelMnemonic = "n";
  public static final String  _FontNameLabelMnemonic = bundle._res_FontNameLabelMnemonic;
  protected    String _res_OrMessage = "{0} or {1}";
  public static final String  _OrMessage = bundle._res_OrMessage;
  protected    String _res_URLDialogPrompt = "URL:";
  public static final String  _URLDialogPrompt = bundle._res_URLDialogPrompt;
  protected    String _res_OpenMenuDialog = "Open...";
  public static final String  _OpenMenuDialog = bundle._res_OpenMenuDialog;
  protected    String _res_DataEntryIncomplete = "Data entry incomplete";
  public static final String  _DataEntryIncomplete = bundle._res_DataEntryIncomplete;
  protected    String _res_ClearAll = "Clear All";
  public static final String  _ClearAll = bundle._res_ClearAll;
  protected    String _res_ResolverRegError = "{0} unable to register DBEventMonitor as ResolverListener on DataSet {1} and/or replace original ResolverListener";
  public static final String  _ResolverRegError = bundle._res_ResolverRegError;
  protected    String _res_UserName = "&User name:";
  public static final String  _UserName = bundle._res_UserName;
  protected    String _res_MacHelpButton = "?";
  public static final String  _MacHelpButton = bundle._res_MacHelpButton;
  protected    String _res_CalcAggFieldRegError = "{0} unable to register DBEventMonitor as CalcAggFieldsListener on DataSet {1} and/or replace original CalcAggFieldsListener";
  public static final String  _CalcAggFieldRegError = bundle._res_CalcAggFieldRegError;
  protected    String _res_Font = "Font...";
  public static final String  _Font = bundle._res_Font;
  protected    String _res_OpenURLDialog = "URL...";
  public static final String  _OpenURLDialog = bundle._res_OpenURLDialog;
  protected    String _res_NavPostFailed = "Unable to set value because could not post or leave row {0}";
  public static final String  _NavPostFailed = bundle._res_NavPostFailed;
  protected    String _res_Post = "Post changes to current row";
  public static final String  _Post = bundle._res_Post;
  protected    String _res_DlgNoFrame = "Frame property must be set before showing dialog";
  public static final String  _DlgNoFrame = bundle._res_DlgNoFrame;
  protected    String _res_NullTblCol = "CustomColumnDescriptor: tableColumns can not be null";
  public static final String  _NullTblCol = bundle._res_NullTblCol;
  protected    String _res_HelpBtn = "Help";
  public static final String  _HelpBtn = bundle._res_HelpBtn;
  protected    String _res_PickListGoToFailed = "Unable to find row in picklist";
  public static final String  _PickListGoToFailed = bundle._res_PickListGoToFailed;
  protected    String _res_CalcAggFiltUnRegError = "{0} unable to unregister DBEventMonitor as CalcAggFieldsListener on DataSet {1} and/or restore original CalcAggFieldsListener";
  public static final String  _CalcAggFiltUnRegError = bundle._res_CalcAggFiltUnRegError;
  protected    String _res_SaveTextorHTMLorSerTitle = "Save as text file, HTML file, or serialized Java object";
  public static final String  _SaveTextorHTMLorSerTitle = bundle._res_SaveTextorHTMLorSerTitle;
  protected    String _res_LoadImageFile = "Load Image File";
  public static final String  _LoadImageFile = bundle._res_LoadImageFile;
  protected    String _res_PostRowFailed = "Unable to post row because of invalid field value";
  public static final String  _PostRowFailed = bundle._res_PostRowFailed;
  protected    String _res_SelectColor = "Please select a color";
  public static final String  _SelectColor = bundle._res_SelectColor;
  protected    String _res_FontSampleText = "aAbBcCdDeE 12345 +-*\\ =<> :,. \"?' ()[]{}";
  public static final String  _FontSampleText = bundle._res_FontSampleText;
  protected    String _res_UnsupSelMode = "<unsupported selection mode -- only ListSelectionModel.SINGLE_SELECTION is supported>";
  public static final String  _UnsupSelMode = bundle._res_UnsupSelMode;
  protected    String _res_AccessDrop = "{0}, dropped column: {1}";
  public static final String  _AccessDrop = bundle._res_AccessDrop;
  protected    String _res_NoButtonMnemonic = "n";
  public static final String  _NoButtonMnemonic = bundle._res_NoButtonMnemonic;
  protected    String _res_OpenTextorHTMLorRTForSerTitle = "Open text file, HTML file, RTF file, or serialized Java object";
  public static final String  _OpenTextorHTMLorRTForSerTitle = bundle._res_OpenTextorHTMLorRTForSerTitle;
  protected    String _res_Password = "&Password:";
  public static final String  _Password = bundle._res_Password;
  protected    String _res_ImageFileFilter = "Image files (*.gif, *.jpg, *.jpeg, *.bmp)";
  public static final String  _ImageFileFilter = bundle._res_ImageFileFilter;
  protected    String _res_PrevBtn = "Previous";
  public static final String  _PrevBtn = bundle._res_PrevBtn;
  protected    String _res_ExitTip = "Exit the application";
  public static final String  _ExitTip = bundle._res_ExitTip;
  protected    String _res_Prior = "Move to prior row";
  public static final String  _Prior = bundle._res_Prior;
  protected    String _res_RTFFileFilter = "Rich Text files (*.rtf)";
  public static final String  _RTFFileFilter = bundle._res_RTFFileFilter;
  protected    String _res_SortBy = "Sort by";
  public static final String  _SortBy = bundle._res_SortBy;
  protected    String _res_TextFileFilter = "Text files (*.txt)";
  public static final String  _TextFileFilter = bundle._res_TextFileFilter;
  protected    String _res_Cut = "Cut";
  public static final String  _Cut = bundle._res_Cut;
  protected    String _res_Next = "Move to next row";
  public static final String  _Next = bundle._res_Next;
  protected    String _res_FontChooserTitle = "Please select a font";
  public static final String  _FontChooserTitle = bundle._res_FontChooserTitle;
  protected    String _res_NextTip = "View next chained exception";
  public static final String  _NextTip = bundle._res_NextTip;
  protected    String _res_OKBtn = "OK";
  public static final String  _OKBtn = bundle._res_OKBtn;
  protected    String _res_AccessAdd = "{0}, new column: {1}";
  public static final String  _AccessAdd = bundle._res_AccessAdd;
  protected    String _res_ExitBtn = "Exit";
  public static final String  _ExitBtn = bundle._res_ExitBtn;
  protected    String _res_StackTip = "View exception stack trace";
  public static final String  _StackTip = bundle._res_StackTip;
  protected    String _res_InvalidSerFile = "The selected file did not contain a serialized Document object.";
  public static final String  _InvalidSerFile = bundle._res_InvalidSerFile;
  protected    String _res_OpenRegError = "{0} unable to register DBEventMonitor as OpenListener on DataSet {1}";
  public static final String  _OpenRegError = bundle._res_OpenRegError;
  protected    String _res_NavLocateFailed = "Unable to locate corresponding value in DataSet";
  public static final String  _NavLocateFailed = bundle._res_NavLocateFailed;
  protected    String _res_ResolveUnRegError = "{0} unable to unregister DBEventMonitor as ResolverListener on DataSet {1} and/or restore original ResolverListener";
  public static final String  _ResolveUnRegError = bundle._res_ResolveUnRegError;
  protected    String _res_ExThrown = "{0}, exception thrown: {2}";
  public static final String  _ExThrown = bundle._res_ExThrown;
  protected    String _res_DataChangeEventUnknown = "DataChangeEvent unknown event ID";
  public static final String  _DataChangeEventUnknown = bundle._res_DataChangeEventUnknown;
  protected    String _res_Refresh = "Refresh data";
  public static final String  _Refresh = bundle._res_Refresh;
//==========================================//

  public static String findString(String id) {
    try {
      return (String)Res.class.getDeclaredField("_" + id).get(null);
    } catch (Exception any) {
      return null;
    }
  }
}
